name: CICD GitHub workflow
'on':
  workflow_dispatch: null
  pull_request:
    types:
      - opened
      - reopened
      - merged
      - closed
      - synchronize
    branches:
      - master
      - main
      - test03
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: temurin
          cache: maven
      - name: Build with Maven
        run: mvn clean compile
  job2:
    name: Job 2 (Always Skipped)
    runs-on: ubuntu-latest
    if: false
    needs: build
    steps:
      - name: Step 1 in Job 2
        run: echo "This should not run"
  test:
    name: Test
    needs: job2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: ServiceNow DevOps Unit Test Results
        uses: ServiceNow/servicenow-devops-test-report@v5.1.0
        with:
          devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
          instance-url: '${{ secrets.SN_INSTANCE_URL }}'
          tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
          job-name: Test
          context-github: '${{ toJSON(github) }}'
          xml-report-filename: testng.xml
  registerArtifact:
    name: RegisterArtifact
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: ServiceNow DevOps Register Artifact
        uses: ServiceNow/servicenow-devops-register-artifact@v5.1.0
        with:
          devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
          instance-url: '${{ secrets.SN_INSTANCE_URL }}'
          tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
          job-name: Register Artifact
          context-github: '${{ toJSON(github) }}'
          artifacts: >-
            [ { "name": "app-devops-cicd.jar", "version": "1.${{
            github.run_number }}", "semanticVersion": "1.${{ github.run_number
            }}.0", "repositoryName": "${{ github.repository }}" } ]
  sonarScan:
    name: Sonar Scan
    needs: registerArtifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: ServiceNow DevOps Sonar Scan Results
        uses: ServiceNow/servicenow-devops-sonar@v5.1.0
        with:
          instance-url: '${{ secrets.SN_INSTANCE_URL }}'
          devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
          tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
          context-github: '${{ toJSON(github) }}'
          job-name: Sonar Scan
          sonar-host-url: '${{ secrets.SONAR_URL }}'
          sonar-project-key: '${{ secrets.SONAR_PROJECT_KEY }}'
  job3:
    name: Job 3 (Always Skipped)
    runs-on: ubuntu-latest
    if: false
    needs: build
    steps:
      - name: Step 1 in Job 2
        run: echo "This should not run"
        
registerPackage:
  name: Register Package
  needs:
    - job3
  runs-on: ubuntu-latest
  steps:
    - name: ServiceNow DevOps Register Package
      uses: ServiceNow/servicenow-devops-register-package@v5.1.0
      with:
        devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
        instance-url: '${{ secrets.SN_INSTANCE_URL }}'
        tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
        context-github: '${{ toJSON(github) }}'
        artifacts: >-
          [ { "name": "app-devops-cicd.jar", "version": "1.${{ github.run_number
          }}", "semanticVersion": "1.${{ github.run_number }}.0",
          "repositoryName": "${{ github.repository }}" } ]
        package-name: app-devops-change-velocity-cicd.war
        job-name: Register Package
change:
  name: Change Request
  if: always()
  needs: sonarScan
  runs-on: ubuntu-latest
  steps:
    - name: ServiceNow DevOps Change Attributes
      uses: ServiceNow/servicenow-devops-change@v5.1.0
      with:
        devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
        instance-url: '${{ secrets.SN_INSTANCE_URL }}'
        tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
        context-github: '${{ toJSON(github) }}'
        job-name: Change Request
        change-request: >-
          {"autoCloseChange":true,"attributes":{"chg_model": {"name": "Normal"
          },"short_description":"Automated Software
          Deployments","description":"Automated Software
          Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software
          update is tested and results can be found in Test Summaries
          Tab.","backout_plan":"When software fails in production, the previous
          software release will be re-deployed.","test_plan":"Testing if the
          software was successfully deployed."}}
        interval: '100'
        timeout: '3600'
deploy:
  name: Deploy
  needs: change
  runs-on: ubuntu-latest
  environment: prod
  steps:
    - name: Run deployment scripts
      run: echo Completed Deployment.
getchange:
  needs: change
  runs-on: ubuntu-latest
  if: always()
  name: ServiceNow DevOps Get Change
  outputs:
    change-request-number: '${{ steps.get_change.outputs.change-request-number }}'
  steps:
    - name: ServiceNow DevOps Get Change
      uses: ServiceNow/servicenow-devops-get-change@v5.1.0
      id: get_change
      with:
        instance-url: '${{ secrets.SN_INSTANCE_URL }}'
        devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
        tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
        context-github: '${{ toJSON(github) }}'
        change-details: '{"build_number":"","pipeline_name":"","stage_name":"Change Request"}'
    - name: Output of ServiceNow DevOps Get Change
      run: >-
        echo 'Output of ServiceNow DevOps Get Change is -> change-request-number
        = ${{ steps.get_change.outputs.change-request-number }}' >>
        $GITHUB_OUTPUT
updatechange:
  needs: getchange
  runs-on: ubuntu-latest
  name: ServiceNow DevOps Update Change
  if: always()
  steps:
    - name: ServiceNow DevOps Update Change
      uses: ServiceNow/servicenow-devops-update-change@v5.1.0
      id: update_change
      with:
        instance-url: '${{ secrets.SN_INSTANCE_URL }}'
        devops-integration-token: '${{ secrets.SN_DEVOPS_TOKEN }}'
        tool-id: '${{ secrets.SN_ORCHESTRATION_TOOL_ID }}'
        context-github: '${{ toJSON(github) }}'
        change-request-number: '${{needs.getchange.outputs.change-request-number}}'
        change-request-details: >-
          {"state":"3","close_code":"successful_issues","close_notes":"Test
          results successful"}
    - name: Outcome of  ServiceNow DevOps Update Change
      run: >-
        echo 'Outcome of ServiceNow DevOps Update Change is -> ${{
        steps.update_change.outputs.status }}'  >> $GITHUB_OUTPUT
