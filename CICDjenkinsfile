def packageName = "app-devops-package-cicd.war"
def artifactname = "app-devops-artifact-cicd.jar"
def version = "1.${BUILD_NUMBER}"
def semanticVersion = "1.${BUILD_NUMBER}.0"
def repoName = "2giridharj/ServiceNow-DevOps-Change-Sample" // Ensure after forking update the repoName accrodingly.
def changeRequestNumber = null

pipeline {
	agent any
	
	tools {
		maven 'Maven'
	}

	environment {
		SCANNER_HOME = tool 'sonarScanner'
		VERACODE_APPLICATION_NAME = 'ServiceNow DevOps App#1' //Ensure you update the correct Application name
		VERACODE_SCANNER_NAME = 'Veracode'
	} 

	stages {
		stage('Build') {
			steps {
				sh 'mvn -B -DskipTests clean compile'
			}
		}

		stage('Test') {
			steps {
			  	sh 'mvn test'
				sleep(5);
			}
			post {
				always {
					junit "**/target/surefire-reports/*.xml"
				}
			}
		}

		stage('Register Artifact') {
			steps {
				snDevOpsArtifact(artifactsPayload: """
				{
				"artifacts":
				[
				    {
				        "name": "${artifactname}",
				        "version": "${version}",
				        "semanticVersion": "${semanticVersion}",
				        "repositoryName": "${repoName}"
				    }
				],
				"branchName": "main"
				}""")
			}     
		}

		/*
		stage('Sonar Scan') {
			steps {
				sonarSummaries()
			}
		}

		stage('Security Scan') {
			steps {
				snDevOpsSecurityResult securityResultAttributes: '{"scanner": "Veracode", "applicationName": "${env.VERACODE_APPLICATION_NAME}"}'
			}
		}
		*/

		stage('Register Package') {
			steps {
				snDevOpsPackage(
				name: "${packageName}",
				artifactsPayload: """
				{
				    "artifacts":
				    [
				        {
				            "name": "${artifactname}",
				            "version": "${version}",
				            "semanticVersion": "${semanticVersion}",
				            "repositoryName": "${repoName}"
				        }
				    ],
				    "branchName": "main"
				}""")
			}
		}
		  
		stage('Change') {
			steps {
			    snDevOpsChange(changeRequestDetails: '''
			    {
			    "attributes": {
					"requested_by": {
						"name": "DevOps System"
					}, //requested_by with name.
					//You can provide requested_by with sys_id. Example: "requested_by": "62826bf03710200044e0bfc8bcbe5df1", 
					"assignment_group": {
						"name": "Change Management"
					}, //assignment_group with name.
					//You can provide assignment_group with sys_id. Example: "assignment_group": "5f721d93c0a8010e015533746de18bf9",
					"priority": "2",
					"comments": "This is a sample pipeline script to be added in your change step",
					"work_notes": "Update this to work_notes",
					"start_date": "2022-01-05 11:59:59", //This is the planned start date.
					"end_date": "2022-01-08 11:59:59" // This is the planned end date.
				}
			    }''')
			}
		}

		stage('Get Change') {
			steps {
			    changeRequestNumber = snDevOpsGetChangeNumber(changeDetails: """{"stage_name":"Change"}""")
			}
		}

		stage('Update Change') {
			steps {
			    snDevOpsUpdateChangeInfo(changeRequestDetails: """{"state":"4","reason":"Location changed", "description": "Canceling change as Location changed from ${currStageName} Step by ${env.BUILD_NUMBER}", "comments": "Update of change request through Update API from ${currStageName} Step by ${env.BUILD_NUMBER}", "work_notes": "Update of change request through Update API from ${currStageName} Step by ${env.BUILD_NUMBER}"}""", changeRequestNumber: """${changeRequestNumber}""")
			}
		}

		stage('Deploy') {
			steps {
				echo "Deploying the change..."
			}
		}
	}
}

def sonarSummaries() {
	withSonarQubeEnv(installationName: 'ramasonarcloud'){
		sh 'mvn clean verify sonar:sonar \
		    -Dsonar.login=1926d793f92181dd0ac406335d4d4bea392a3023 \
		    -Dsonar.host.url=https://sonarcloud.io \
		    -Dsonar.organization=pramaraju96 \
		    -Dsonar.projectKey=pramaraju96_DevOps-Test'
    }
}
